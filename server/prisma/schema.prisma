// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Task {
  id                 String   @id @default(uuid()) // Unique identifier for the task
  userId             String   // Foreign key referencing the UserData model
  projectName        String   // Name of the project the task belongs to
  taskName           String   // Name or title of the task
  teamMembers        Json     // JSON object storing team members and their roles
  dueDate            DateTime // Due date for the task
  completionPercentage Int    // Task completion percentage (0-100)
  forStoringTasks    Json     // JSON object to store the status of tasks

  createdAt          DateTime @default(now()) // Timestamp when the task was created
  updatedAt          DateTime @updatedAt // Timestamp when the task was last updated

  // Relationship to UserData
  user               UserData @relation(fields: [userId], references: [id])

  @@index([userId]) // Index on userId for better query performance
}

model UserData {
  id            String   @id @default(uuid())  // Unique identifier for the user
  first_name    String  // User's first name
  last_name     String  // User's last name
  email         String  @unique  // User's email address
  address       String? // Optional address
  gender        String  // User's gender
  dob           DateTime // Date of birth
  role          String  // User's role
  phone_number  String  @unique  // User's phone number
  password      String  // User's password

  // Relationship to Task
  tasks         Task[]   // One-to-many relationship with Task
}
